[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.11.0","content-config-digest","af38c04c4284c50b","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://yourusername.netlify.app\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":\"shiki\",\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":true,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false},\"legacy\":{\"collections\":false}}","blog",["Map",11,12],"incremental-median-estimation",{"id":11,"data":13,"body":20,"filePath":21,"digest":22,"legacyId":23,"deferredRender":24},{"title":14,"description":15,"pubDate":16,"tags":17},"Incremental median","How to estimate the median of steaming data",["Date","2025-07-15T00:00:00.000Z"],[18,19],"statistics","streaming data","import { Image } from 'astro:assets';\n\n\nA couple of years ago I thought to myself:\n\n*\"I know how to estimate a cumulative average, but how does one estimate the median in the same way?\"*\n\nThis was an interesting question because while averages are great, they still suffer greatly from outliers. \nThis led me down a track that ended on a stack overflow thread of cumulative median esimation, and by extension, any quantile.\nThe algorithm is simple and uses a frequency approach to the problem.\n\nIn a nutshell, if the distribution is stationary then we expect a 50/50 split of higher and lower observations around our median.\nThe way we translate this into an algorithm is that higher/lower nudges our median estimate, and if the higher/lower observations are in balance then the nudges cancel out.\nIt can be coded up as this:\n\n```python\ndef update_median_estimate(\n        median_estimate: float, \n        observation: float, \n        nudge: float\n    ) -> float:\n    diff = median_estimate - observation\n    sign = diff / abs(diff)\n    new_median_estimate = median_estimate - nudge * sign\n    return new_median_estimate\n```\n\nThe median estimate can just be initialized to the first observation. This leave the nudge factor as a parameter. Here is a graph of the median estimations applied to Gaussian noise with two different nudges:\n\n![Two incremental median estimations](/images/inc_1.png)\n\nNote that nudge = 0.1 makes the estimate converge quicker than nudge = 0.01, but, the trade-off is that it is also more sensitive to noise. So, what is a good nudge factor?\n\nOne way is to approach is heuristically; say that we expect the estimator to approximately reach the median in M steps. \nSince the median is the 50th quantile; a worst case scenario where we start at the min or max means that we have to step 50 quantiles. \nThis means that we could choose $\\frac{max(max - median,\\: median - min)}{M}$ as the nudge factor. \nSince we do not know the median we can use the range $R = max - min$ as an upper bound $\\frac{R}{M}$. This is an extreme scenario where the median is close to either the min or max.\nFor the uniform scenario where the median lies dead in the middle between min and max it is twice as big, so then we will get to our estimate in $\\frac{M}{2}$ steps.\n\n![Incrementally estimating max and min](/images/inc_2.png)\n\nWith this method we have a bit more control, as can be seen in the following graph:\n\n![Comparison of different R/M nudges](/images/inc_3.png)\n\nEyeballing this particular example gives the M = 30, 16 steps and M = 120, 91 steps to get to the sample median. \nNow, there additional steps we can take to ensure a fair(er) nudging toward the median and it relates to $R$.\nWe do not expect our estimate of R to be close to the truth after only 3 or 10 observations, so what do we expect it to be and can we correct for that?\n\nFor $n$ samples selected uniformly on the interval [0,1) the expectation of the maximum is $\\frac{n}{n+1}$ and the minimum is $\\frac{1}{n+1}$.\nThis means the expectation of the range is\n$$\nE(R|n) = \\frac{n}{n+1} - \\frac{1}{n+1} = \\frac{n-1}{n+1}.\n$$\n\nThe intuition behind this is that $n$ samples split the line into $n+1$ sections and ordering them by size gives $1$ and $n$ as the first and final sections.\nOf course, our data is not likely uniformly distributed, but the quantiles are by definition.\nThis means that after, for example $n = 9$, we would have expected to seen 10% and 90% quantile with an 80 quantile range.\nBy $n = 99$ we will have seen from the 1% to the 99% quantile and subsequently the $n = 999$ sample gives us 0.1% to 99.9% quantile.\nThere are two take-aways from this observation.\n\nThe first is that we can invert the formula $R = \\frac{n-1}{n+1} \\rightarrow n = -\\frac{R+1}{R-1}$.\nThis is handy if we are looking for a specific quantile $q$, it corresponds to the range $R_q = 1-2q$ and by our formula $n = \\frac{1-q}{q}$. \nThis only makes sense for $q \u003C 0.5$ so for $q > 0.5$ we find its mirrored buddy $\\tilde{q} = 1 - q$. \nNow, specifically for the median this collapses to $n = 1$ but if we are going to look at any quantile then this will come in handy (like later in this post).\nIn essence, this estimate of $n$ will tell you when we it is likely to have seen the quantile we are estimating.\n\nThe second take away is that we can use the formula to create a better estimate $R_n$ out of our naive incremental $R$ as $R_n = \\frac{R}{\\frac{n-1}{n+1}} = \\frac{R(n+1)}{n-1}$. \nThis means that the range will scaled up to conpensate for likely unobserved range. This means that the full nudge heuristic is now $\\frac{R(n+1)}{M(n-1)}$. \nSee two examples below of the difference, one cherry-picked (note that the correction is only relevant when we need the nudges to be large) and one regular:\n\n![Example 1 of improved convergence](/images/inc_4.png)\n\n![Example 2 of improved convergence](/images/inc_5.png)\n\nIt is not much but it is something.\n\nThe elephant in the room are the variations in the estimate. \nSince we are observing random noise the estimates will follow the random sequences of nudges like a random walk.\nWhat we know about random walks of $n$ steps is that the expectation $E(\\mathcal{Z}_n) = 0$ with the variance $E(\\mathcal{Z}_n^2) = n$.\nSo if we have a random walk then we would expect the standard deviation to grow like $\\sqrt{n}$, meaning that we should shrink the nudges to compensate for this effect.\nOf course, we would only apply this after $M$ steps, when we have actually expected to converge to the median.\n\n![Test of random walk penalty of the nudge amplitude](/images/inc_6.png)\n\nAnd for a change, let us look at another distribution, like an exponential:\n\n![Test of random walk penalty of the nudge amplitude on an exponential distribution](/images/inc_7.png)\n\nBut, our system is not a true random walk because is it still an approximation of the median, so it will have some drift towards the true distribution median. \nSay that we are targeting the $q_t$ quantile (0.5 in case of the median) with $dq$ nudges (0.1 for our example) of our estimate $q$. \nIf $q = q_t$ then we have a 50/50 of being nudged in either direction, say + happens, then we are at $q + dq$. \nThis has now shifted the probabilities as we now have a 40/60 chance in favor of going back towards $q_t$.\nIf + happens again then we are at $q + 2dq$, meaning now a 30/70 chance next time. \nThe most extreme scenario has $dq = q_t$ when $q_t = 0.5$ as it always reverses its previous step, meaning that the distribution is 0: 25%, $q_t$: 50%, 1: 25%.\n\nOf course, we want to be able to assume any $dq$. \nTo get an intution behind this we simulated using $dq = \\frac{1}{50}$ and noted that is approximated a Gaussian distribution.\nIn the limit where $dq \\rightarrow 0$ it makes sense because then the drift back towards the median is less dominant. \n![Histogram of quantile estimations](/images/inc_8.png)\n\nWe run more experiments with different fractions of $\\frac{dq}{q_t}$, calculate the standard deviation, resulting in:\n![Experiments logging standard deviation of quantile estimations as a function of dq/qt](/images/inc_9.png)\n\nThe curve fitting is easy as it is a square root of the fraction and $x = 0.5$ neatly intersects $y = 0.25$. \nThis means that empirically we have arrived at the rubber band random walk standard deviation $\\sigma = \\frac{1}{\\sqrt{8}}\\sqrt{\\frac{dq}{q_t}} = \\sqrt{\\frac{dq}{8q_t}}$. \nNote that this does not depend on $n$, which we conjectured above. \nSimiarly to what we have done before, we can shuffle expressions around to find the fraction given a target standard deviation $\\sigma$ as $\\frac{dq}{q_t} = 8\\sigma^2$.\nIf we were to calibrate a 95% confidence interval ($\\pm 1.96\\sigma$) over $\\pm 0.01$ quantiles ($\\rightarrow \\sigma = \\frac{0.01}{1.96}$) then $\\frac{dq}{q_t} \\approx 0.00021 \\rightarrow dq = 1/9604$ ($q_t = 0.5$).\nFor a more liberal $\\pm 0.025$ quantiles $\\frac{dq}{q_t} \\approx 0.0013 \\rightarrow dq = 1/1536.64$.\n\n![Example 1 of random walk confidence interval nudges](/images/inc_10.png)\n\n![Example 2 of random walk confidence interval nudges](/images/inc_11.png)\n\nThat has (kind-of) solved it! Now there are two possibilities to take this further, the first is to generalize to any quantile and the second is to adress non-stationarity.\n\nBut we save those for later posts :)","src/content/blog/incremental-median-estimation.mdx","d316141abe973743","incremental-median-estimation.mdx",true]